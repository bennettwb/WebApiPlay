//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("EditorialSiteDBModel", "CityState", "City", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApi.City), "State", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebApi.State), true)]
[assembly: EdmRelationshipAttribute("EditorialSiteDBModel", "StateCountry", "State", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApi.State), "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebApi.Country), true)]

#endregion

namespace WebApi
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class LocationEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new LocationEntities object using the connection string found in the 'LocationEntities' section of the application configuration file.
        /// </summary>
        public LocationEntities() : base("name=LocationEntities", "LocationEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new LocationEntities object.
        /// </summary>
        public LocationEntities(string connectionString) : base(connectionString, "LocationEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new LocationEntities object.
        /// </summary>
        public LocationEntities(EntityConnection connection) : base(connection, "LocationEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Country> Countries
        {
            get
            {
                if ((_Countries == null))
                {
                    _Countries = base.CreateObjectSet<Country>("Countries");
                }
                return _Countries;
            }
        }
        private ObjectSet<Country> _Countries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<City> Cities
        {
            get
            {
                if ((_Cities == null))
                {
                    _Cities = base.CreateObjectSet<City>("Cities");
                }
                return _Cities;
            }
        }
        private ObjectSet<City> _Cities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<State> States
        {
            get
            {
                if ((_States == null))
                {
                    _States = base.CreateObjectSet<State>("States");
                }
                return _States;
            }
        }
        private ObjectSet<State> _States;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Countries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCountries(Country country)
        {
            base.AddObject("Countries", country);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Cities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCities(City city)
        {
            base.AddObject("Cities", city);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the States EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStates(State state)
        {
            base.AddObject("States", state);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EditorialSiteDBModel", Name="City")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class City : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new City object.
        /// </summary>
        /// <param name="ctyI">Initial value of the CtyI property.</param>
        /// <param name="ctyN">Initial value of the CtyN property.</param>
        /// <param name="stPrvncI">Initial value of the StPrvncI property.</param>
        /// <param name="tmZnI">Initial value of the TmZnI property.</param>
        /// <param name="lclN">Initial value of the LclN property.</param>
        /// <param name="srtOrdr">Initial value of the SrtOrdr property.</param>
        /// <param name="statC">Initial value of the StatC property.</param>
        public static City CreateCity(global::System.Int32 ctyI, global::System.String ctyN, global::System.Int32 stPrvncI, global::System.Int32 tmZnI, global::System.String lclN, global::System.Int16 srtOrdr, global::System.String statC)
        {
            City city = new City();
            city.CtyI = ctyI;
            city.CtyN = ctyN;
            city.StPrvncI = stPrvncI;
            city.TmZnI = tmZnI;
            city.LclN = lclN;
            city.SrtOrdr = srtOrdr;
            city.StatC = statC;
            return city;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CtyI
        {
            get
            {
                return _CtyI;
            }
            set
            {
                if (_CtyI != value)
                {
                    OnCtyIChanging(value);
                    ReportPropertyChanging("CtyI");
                    _CtyI = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CtyI");
                    OnCtyIChanged();
                }
            }
        }
        private global::System.Int32 _CtyI;
        partial void OnCtyIChanging(global::System.Int32 value);
        partial void OnCtyIChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CtyN
        {
            get
            {
                return _CtyN;
            }
            set
            {
                OnCtyNChanging(value);
                ReportPropertyChanging("CtyN");
                _CtyN = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CtyN");
                OnCtyNChanged();
            }
        }
        private global::System.String _CtyN;
        partial void OnCtyNChanging(global::System.String value);
        partial void OnCtyNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StPrvncI
        {
            get
            {
                return _StPrvncI;
            }
            set
            {
                OnStPrvncIChanging(value);
                ReportPropertyChanging("StPrvncI");
                _StPrvncI = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StPrvncI");
                OnStPrvncIChanged();
            }
        }
        private global::System.Int32 _StPrvncI;
        partial void OnStPrvncIChanging(global::System.Int32 value);
        partial void OnStPrvncIChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TmZnI
        {
            get
            {
                return _TmZnI;
            }
            set
            {
                OnTmZnIChanging(value);
                ReportPropertyChanging("TmZnI");
                _TmZnI = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TmZnI");
                OnTmZnIChanged();
            }
        }
        private global::System.Int32 _TmZnI;
        partial void OnTmZnIChanging(global::System.Int32 value);
        partial void OnTmZnIChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LclN
        {
            get
            {
                return _LclN;
            }
            set
            {
                OnLclNChanging(value);
                ReportPropertyChanging("LclN");
                _LclN = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LclN");
                OnLclNChanged();
            }
        }
        private global::System.String _LclN;
        partial void OnLclNChanging(global::System.String value);
        partial void OnLclNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Latd
        {
            get
            {
                return _Latd;
            }
            set
            {
                OnLatdChanging(value);
                ReportPropertyChanging("Latd");
                _Latd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Latd");
                OnLatdChanged();
            }
        }
        private Nullable<global::System.Double> _Latd;
        partial void OnLatdChanging(Nullable<global::System.Double> value);
        partial void OnLatdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Lngtd
        {
            get
            {
                return _Lngtd;
            }
            set
            {
                OnLngtdChanging(value);
                ReportPropertyChanging("Lngtd");
                _Lngtd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Lngtd");
                OnLngtdChanged();
            }
        }
        private Nullable<global::System.Double> _Lngtd;
        partial void OnLngtdChanging(Nullable<global::System.Double> value);
        partial void OnLngtdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 SrtOrdr
        {
            get
            {
                return _SrtOrdr;
            }
            set
            {
                OnSrtOrdrChanging(value);
                ReportPropertyChanging("SrtOrdr");
                _SrtOrdr = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SrtOrdr");
                OnSrtOrdrChanged();
            }
        }
        private global::System.Int16 _SrtOrdr;
        partial void OnSrtOrdrChanging(global::System.Int16 value);
        partial void OnSrtOrdrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StatC
        {
            get
            {
                return _StatC;
            }
            set
            {
                OnStatCChanging(value);
                ReportPropertyChanging("StatC");
                _StatC = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StatC");
                OnStatCChanged();
            }
        }
        private global::System.String _StatC;
        partial void OnStatCChanging(global::System.String value);
        partial void OnStatCChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EditorialSiteDBModel", "CityState", "State")]
        public State State
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("EditorialSiteDBModel.CityState", "State").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("EditorialSiteDBModel.CityState", "State").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<State> StateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("EditorialSiteDBModel.CityState", "State");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<State>("EditorialSiteDBModel.CityState", "State", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EditorialSiteDBModel", Name="Country")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Country : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Country object.
        /// </summary>
        /// <param name="cntryI">Initial value of the CntryI property.</param>
        /// <param name="cntryC">Initial value of the CntryC property.</param>
        /// <param name="cntryN">Initial value of the CntryN property.</param>
        /// <param name="rgnI">Initial value of the RgnI property.</param>
        /// <param name="teamsCntryId">Initial value of the TeamsCntryId property.</param>
        /// <param name="teamsCntryN">Initial value of the TeamsCntryN property.</param>
        /// <param name="srtOrdr">Initial value of the SrtOrdr property.</param>
        public static Country CreateCountry(global::System.Int32 cntryI, global::System.String cntryC, global::System.String cntryN, global::System.Int32 rgnI, global::System.Int32 teamsCntryId, global::System.String teamsCntryN, global::System.Int16 srtOrdr)
        {
            Country country = new Country();
            country.CntryI = cntryI;
            country.CntryC = cntryC;
            country.CntryN = cntryN;
            country.RgnI = rgnI;
            country.TeamsCntryId = teamsCntryId;
            country.TeamsCntryN = teamsCntryN;
            country.SrtOrdr = srtOrdr;
            return country;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CntryI
        {
            get
            {
                return _CntryI;
            }
            set
            {
                if (_CntryI != value)
                {
                    OnCntryIChanging(value);
                    ReportPropertyChanging("CntryI");
                    _CntryI = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CntryI");
                    OnCntryIChanged();
                }
            }
        }
        private global::System.Int32 _CntryI;
        partial void OnCntryIChanging(global::System.Int32 value);
        partial void OnCntryIChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CntryC
        {
            get
            {
                return _CntryC;
            }
            set
            {
                OnCntryCChanging(value);
                ReportPropertyChanging("CntryC");
                _CntryC = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CntryC");
                OnCntryCChanged();
            }
        }
        private global::System.String _CntryC;
        partial void OnCntryCChanging(global::System.String value);
        partial void OnCntryCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CntryN
        {
            get
            {
                return _CntryN;
            }
            set
            {
                OnCntryNChanging(value);
                ReportPropertyChanging("CntryN");
                _CntryN = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CntryN");
                OnCntryNChanged();
            }
        }
        private global::System.String _CntryN;
        partial void OnCntryNChanging(global::System.String value);
        partial void OnCntryNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RgnI
        {
            get
            {
                return _RgnI;
            }
            set
            {
                OnRgnIChanging(value);
                ReportPropertyChanging("RgnI");
                _RgnI = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RgnI");
                OnRgnIChanged();
            }
        }
        private global::System.Int32 _RgnI;
        partial void OnRgnIChanging(global::System.Int32 value);
        partial void OnRgnIChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TeamsCntryId
        {
            get
            {
                return _TeamsCntryId;
            }
            set
            {
                OnTeamsCntryIdChanging(value);
                ReportPropertyChanging("TeamsCntryId");
                _TeamsCntryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TeamsCntryId");
                OnTeamsCntryIdChanged();
            }
        }
        private global::System.Int32 _TeamsCntryId;
        partial void OnTeamsCntryIdChanging(global::System.Int32 value);
        partial void OnTeamsCntryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TeamsCntryN
        {
            get
            {
                return _TeamsCntryN;
            }
            set
            {
                OnTeamsCntryNChanging(value);
                ReportPropertyChanging("TeamsCntryN");
                _TeamsCntryN = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TeamsCntryN");
                OnTeamsCntryNChanged();
            }
        }
        private global::System.String _TeamsCntryN;
        partial void OnTeamsCntryNChanging(global::System.String value);
        partial void OnTeamsCntryNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 SrtOrdr
        {
            get
            {
                return _SrtOrdr;
            }
            set
            {
                OnSrtOrdrChanging(value);
                ReportPropertyChanging("SrtOrdr");
                _SrtOrdr = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SrtOrdr");
                OnSrtOrdrChanged();
            }
        }
        private global::System.Int16 _SrtOrdr;
        partial void OnSrtOrdrChanging(global::System.Int16 value);
        partial void OnSrtOrdrChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EditorialSiteDBModel", "StateCountry", "State")]
        public EntityCollection<State> States
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<State>("EditorialSiteDBModel.StateCountry", "State");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<State>("EditorialSiteDBModel.StateCountry", "State", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EditorialSiteDBModel", Name="State")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class State : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new State object.
        /// </summary>
        /// <param name="stPrvncI">Initial value of the StPrvncI property.</param>
        /// <param name="stPrvncN">Initial value of the StPrvncN property.</param>
        /// <param name="cntryI">Initial value of the CntryI property.</param>
        /// <param name="statC">Initial value of the StatC property.</param>
        public static State CreateState(global::System.Int32 stPrvncI, global::System.String stPrvncN, global::System.Int32 cntryI, global::System.String statC)
        {
            State state = new State();
            state.StPrvncI = stPrvncI;
            state.StPrvncN = stPrvncN;
            state.CntryI = cntryI;
            state.StatC = statC;
            return state;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StPrvncI
        {
            get
            {
                return _StPrvncI;
            }
            set
            {
                if (_StPrvncI != value)
                {
                    OnStPrvncIChanging(value);
                    ReportPropertyChanging("StPrvncI");
                    _StPrvncI = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StPrvncI");
                    OnStPrvncIChanged();
                }
            }
        }
        private global::System.Int32 _StPrvncI;
        partial void OnStPrvncIChanging(global::System.Int32 value);
        partial void OnStPrvncIChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StPrvncN
        {
            get
            {
                return _StPrvncN;
            }
            set
            {
                OnStPrvncNChanging(value);
                ReportPropertyChanging("StPrvncN");
                _StPrvncN = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StPrvncN");
                OnStPrvncNChanged();
            }
        }
        private global::System.String _StPrvncN;
        partial void OnStPrvncNChanging(global::System.String value);
        partial void OnStPrvncNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CntryI
        {
            get
            {
                return _CntryI;
            }
            set
            {
                OnCntryIChanging(value);
                ReportPropertyChanging("CntryI");
                _CntryI = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CntryI");
                OnCntryIChanged();
            }
        }
        private global::System.Int32 _CntryI;
        partial void OnCntryIChanging(global::System.Int32 value);
        partial void OnCntryIChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UsStC
        {
            get
            {
                return _UsStC;
            }
            set
            {
                OnUsStCChanging(value);
                ReportPropertyChanging("UsStC");
                _UsStC = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UsStC");
                OnUsStCChanged();
            }
        }
        private global::System.String _UsStC;
        partial void OnUsStCChanging(global::System.String value);
        partial void OnUsStCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StatC
        {
            get
            {
                return _StatC;
            }
            set
            {
                OnStatCChanging(value);
                ReportPropertyChanging("StatC");
                _StatC = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StatC");
                OnStatCChanged();
            }
        }
        private global::System.String _StatC;
        partial void OnStatCChanging(global::System.String value);
        partial void OnStatCChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EditorialSiteDBModel", "CityState", "City")]
        public EntityCollection<City> Cities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<City>("EditorialSiteDBModel.CityState", "City");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<City>("EditorialSiteDBModel.CityState", "City", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EditorialSiteDBModel", "StateCountry", "Country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("EditorialSiteDBModel.StateCountry", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("EditorialSiteDBModel.StateCountry", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("EditorialSiteDBModel.StateCountry", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("EditorialSiteDBModel.StateCountry", "Country", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
